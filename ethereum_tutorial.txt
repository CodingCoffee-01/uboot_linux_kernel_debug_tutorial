sudo add-apt-repository -y ppa:ethereum/ethereum

sudo apt-get update 
sudo apt-get install npm ethereum

or  

sudo apt-get update
sudo apt-get install npm ethereum-unstable   

sudo npm install -g ethereumjs-testrpc

testrpc -version

sudo npm install -g truffle

truffle version

mkdir ETH 
mkdir ETH/pvt

nano ETH/pvt/genesis.json

{
    "nonce": "0x0000000000000042",
    "mixhash": "0x0000000000000000000000000000000000000000000000000000000000000000",
    "difficulty": "0x400", 
    "alloc": {},
    "coinbase": "0x0000000000000000000000000000000000000000", 
    "timestamp": "0x0",   
    "parentHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
    "extraData": "0x",
    "gasLimit": "0xffffffff", 
    "config": {
       "chainId": 4224,
       "homesteadBlock": 0,
       "eip155Block": 1,
       "eip158Block": 1
    }
}

correct one : 
{
  "config": {
    "chainId": 10,
    "homesteadBlock": 0,
    "eip150Block": 0,
    "eip150Hash": "0x0000000000000000000000000000000000000000000000000000000000000000",
    "eip155Block": 0,
    "eip158Block": 0,
    "byzantiumBlock": 0,
    "constantinopleBlock": 0,
    "petersburgBlock": 0,
    "istanbulBlock": 0,
    "ethash": {}
  },
  "nonce": "0x0",
  "timestamp": "0x5e4a53b2",
  "extraData": "0x0000000000000000000000000000000000000000000000000000000000000000",
  "gasLimit": "0x47b760",
  "difficulty": "0x80000",
  "mixHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
  "coinbase": "0x0000000000000000000000000000000000000000",
  "alloc": {
    "0000000000000000000000000000000000000088": {
      "balance": "0x200000000000000000000000000000000000000000000000000000000000000"
    }
  },
  "number": "0x0",
  "gasUsed": "0x0",
  "parentHash": "0x0000000000000000000000000000000000000000000000000000000000000000"
}



geth --datadir ./Eth/pvt init genesis.json 

geth --datadir ./Eth/pvt --networkid 15 --nat extip:172.16.254.4

geth attach http://127.0.0.1:8545 --datadir ./Eth/pvt 



eth.accounts

eth.blockNumber

eth.getBlock(0)

eth.mining

net.version

net.peerCount

personal.newAccount()

eth.accounts

eth.coinbase

personal.unlockAccount(eth.accounts[0])

web3.fromWei(eth.getBalance(eth.coinbase),"ether")

eth.sendTransaction({from:eth.coinbase, to: eth.accounts[1], value: web3.toWei(100,"ether")})   

eth.getBalance(eth.accounts[0])

//  mining 

miner.start(1)

miner.stop() 

eth.blockNumber

eth.getBalance(eth.accounts[0])

eth.getBalance(eth.coinbase)

web3.fromWei(eth.getBalance(eth.accounts[0]), "ether")

// trading 

eth.getBlock(0).transactions.length

eth.getBlock(7).transactions.length

eth.mining

personal.newAccount()

Passphrase:
Repeat passphrase:
"0x7a5005c95252e35d58e38f6dc5d2ac6e4b6f625b"

eth.accounts
["0xe00f575ea205035ca9c530effa728202e5385cb2", "0x7a5005c95252e35d58e38f6dc5d2ac6e4b6f625b"]

eth.getBalance(eth.accounts[1])


我們來送一些 Ether 到第 2 個帳號:

web3.toWei(5, "ether")
"5000000000000000000"

eth.sendTransaction({ from: eth.accounts[0], to: eth.accounts[1], value: web3.toWei(5, "ether") })
Error: authentication needed: password or unlock
這時我們會看到 console 報錯，這是因為我們還沒有 unlock 帳號，在 from 的帳號需要 unlock，to 的帳號不需要 unlock，所以我們需要 unlock eth.accounts[0] ：

personal.unlockAccount(eth.accounts[0])
Unlock account 0xe00f575ea205035ca9c530effa728202e5385cb2 Passphrase:


var txHash = eth.sendTransaction({ from: eth.accounts[0], to: eth.accounts[1], value: web3.toWei(5, "ether") })

txHash "0x9f494ebc7b9ad6e6a9abd36798c6d04dcd7e883acf553a99e581b8550ec16178"
我們可以成功送出交易了，讓我們看一下交易的詳細資料：

eth.getTransaction(txHash)
{
  blockHash: "...",
  blockNumber: null,
  from: "0xe00f575ea205035ca9c530effa728202e5385cb2",
  gas: 90000,
  gasPrice: 20304857463,
  hash: "0x9f494ebc7b9ad6e6a9abd36798c6d04dcd7e883acf553a99e581b8550ec16178",
  input: "0x",
  nonce: 0,
  r: "...",
  s: "...",
  to: "0x7a5005c95252e35d58e38f6dc5d2ac6e4b6f625b",
  transactionIndex: null,
  v: "0x78",
  value: 5000000000000000000
}
我們可以看到這個交易的詳細資料中，blockNumber 是 null，這代表交易還未確認，如果我們查看交易收據：

eth.getTransactionReceipt(txHash)
null
回傳得到 null，我們看看第 2 個帳號是否有收到 Ether：

eth.getBalance(eth.accounts[1])
0
仍然是 0 Ether，所以第 2 的帳號還沒有收到 Ether，我們需要將挖礦打開，這樣新的交易才能在新的挖礦區塊裡被確認：

miner.start(1)

// 等待挖礦完成幾個區塊之後
miner.stop()

eth.getBalance(eth.accounts[1])
5000000000000000000

eth.getTransaction(txHash)
{
  blockHash: "...",
  blockNumber: 8,
  from: "0xe00f575ea205035ca9c530effa728202e5385cb2",
  gas: 90000,
  gasPrice: 20304857463,
  hash: "0x9f494ebc7b9ad6e6a9abd36798c6d04dcd7e883acf553a99e581b8550ec16178",
  input: "0x",
  nonce: 0,
  r: "...",
  s: "...",
  to: "0x7a5005c95252e35d58e38f6dc5d2ac6e4b6f625b",
  transactionIndex: null,
  v: "0x78",
  value: 5000000000000000000
}
我們可以看到第 2 個帳號拿到 5 Ether 了，而這個交易的 blockNumber 也變成了 8，接下來我們看看交易收據：

eth.getTransactionReceipt(txHash)
{
  blockHash: "...",
  blockNumber: 8,
  contractAddress: null,
  cumulativeGasUsed: 21000,
  from: "0xe00f575ea205035ca9c530effa728202e5385cb2",
  gasUsed: 21000,
  logs: [],
  logsBloom: "...",
  status: "0x1",
  to: "0x7a5005c95252e35d58e38f6dc5d2ac6e4b6f625b",
  transactionHash: "...",
  transactionIndex: 0
}

eth.sendTransaction({ from: eth.accounts[0], to: eth.accounts[1], value: web3.toWei(5, "ether") })

eth.blockNumber

txpool.inspect.pending

miner.start(1);admin.sleepBlocks(1);miner.stop();

ls ~/.ethereum/net42/keystore/

admin.nodeInfo.enode
"enode://cf2d54937d2e7ee080e69ecde67352837fd8230482fea2cc34ec756e2f36c10608d2cdbb66f7788c84a0069c162f043fa1f660a942dddf8fcdf9d74de87061b4@[::]:30303"

admin.addPeer("enode://cf2d54937d2e7ee080e69ecde67352837fd8230482fea2cc34ec756e2f36c10608d2cdbb66f7788c84a0069c162f043fa1f660a942dddf8fcdf9d74de87061b4@172.31.22.132:30303")

ref from : https://www.quicknode.com/guides/infrastructure/how-to-install-and-run-a-geth-node
           https://github.com/ethereum/go-ethereum/issues/20676
           https://blog.fukuball.com/ethereum-%E9%96%8B%E7%99%BC%E7%AD%86%E8%A8%98-22geth-%E5%9F%BA%E7%A4%8E%E7%94%A8%E6%B3%95%E5%8F%8A%E6%9E%B6%E8%A8%AD-muti-nodes-%E7%A7%81%E6%9C%89%E9%8F%88/
           https://geth.ethereum.org/docs/interface/private-network
           https://ithelp.ithome.com.tw/articles/10204436

           https://chainlist.org/zh